name: CD

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
        
      - name: Build frontend
        run: cd frontend && npm run build
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./infrastructure/docker/Dockerfile.frontend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/radiox-frontend:latest
          target: production
          
      - name: Build and push backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./infrastructure/docker/Dockerfile.backend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/radiox-backend:latest
          target: production
          
      - name: Build and push processing Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./processing
          file: ./infrastructure/docker/Dockerfile.backend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/radiox-processing:latest
          target: production
      
      # Deploy to production server
      # This step would typically use SSH to connect to your server and update the deployment
      # For example, using docker-compose to pull the latest images and restart the services
      - name: Deploy to production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /path/to/radiox
            git pull
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d
